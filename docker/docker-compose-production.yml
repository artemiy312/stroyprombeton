version: '2'

services:

  stb-source:
    build:
      context: ..
      dockerfile: docker/source/prod/Dockerfile
    image: fidals/stb-source:prod
    container_name: stb-source
    restart: always
    volumes:
      - /usr/app/src/ # code volume
      - /opt/media/stroyprombeton/:/usr/app/src/media/
    command: sh -c "top > /dev/null"

  stb-python:
    build:
      context: ..
      dockerfile: docker/python/prod/Dockerfile
    image: fidals/stb:prod
    container_name: stb-python
    restart: always
    environment:
      - DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE
      - DATABASE_URL=postgres://$DB_USER:$DB_PASS@stb-postgres/$DB_NAME
      - BROCKER_URL=amqp://$RABBITMQ_DEFAULT_USER:$RABBITMQ_DEFAULT_PASS@stb-rabbitmq:5672/
    depends_on:
      - stb-postgres
      - stb-rabbitmq
    ports:
      - $VIRTUAL_HOST_PORT
    volumes:
      - $DEPS_DIR # contains refarm-site modules
    volumes_from:
      - stb-source
    networks:
      - stb-backend
      - stb-frontend
    command: gunicorn stroyprombeton.wsgi:application -c /etc/gunicorn.py -b 0.0.0.0:$VIRTUAL_HOST_PORT

  stb-python-stage:
    image: fidals/stb:prod
    container_name: stb-python-stage
    restart: always
    environment:
      - DJANGO_SETTINGS_MODULE=stroyprombeton.settings.dev
      - DATABASE_URL=postgres://$DB_USER:$DB_PASS@stb-postgres/$DB_DEV_NAME
    depends_on:
      - stb-postgres
      - stb-rabbitmq
    ports:
      - '$VIRTUAL_HOST_STAGE_EXPOSE_PORT:$VIRTUAL_HOST_STAGE_PORT'
    volumes:
      - /src/ # contains refarm-site modules
    volumes_from:
      - stb-source
    networks:
      - stb-backend
      - stb-frontend
    command: gunicorn stroyprombeton.wsgi:application -c /etc/gunicorn.py -b 0.0.0.0:$VIRTUAL_HOST_STAGE_PORT

  stb-celery-beat:
    image: fidals/stb:prod
    container_name: stb-celery-beat
    restart: always
    environment:
      - DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE
      - DATABASE_URL=postgres://$DB_USER:$DB_PASS@stb-postgres/$DB_NAME
      - BROCKER_URL=amqp://$RABBITMQ_DEFAULT_USER:$RABBITMQ_DEFAULT_PASS@stb-rabbitmq:5672/
    depends_on:
      - stb-python
    volumes_from:
      - stb-source
    networks:
      - stb-backend
    command: celery -A stroyprombeton beat -l info

  stb-celery-mail-worker:
    image: fidals/stb:prod
    container_name: stb-celery-mail-worker
    restart: always
    environment:
      - DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE
      - DATABASE_URL=postgres://$DB_USER:$DB_PASS@stb-postgres/$DB_NAME
      - BROCKER_URL=amqp://$RABBITMQ_DEFAULT_USER:$RABBITMQ_DEFAULT_PASS@stb-rabbitmq:5672/
    depends_on:
      - stb-python
    volumes_from:
      - stb-source
    networks:
      - stb-backend
    command: celery -A stroyprombeton worker -E -n worker.mail@%%h -l info -Q mail

  stb-celery-command-worker:
    image: fidals/stb:prod
    container_name: stb-celery-command-worker
    restart: always
    environment:
      - DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE
      - DATABASE_URL=postgres://$DB_USER:$DB_PASS@stb-postgres/$DB_NAME
      - BROCKER_URL=amqp://$RABBITMQ_DEFAULT_USER:$RABBITMQ_DEFAULT_PASS@stb-rabbitmq:5672/
    depends_on:
      - stb-python
    volumes_from:
      - stb-source
    networks:
      - stb-backend
    command: celery -A stroyprombeton worker -E -n worker.command@%%h -l info -Q command

  stb-nginx:
    build:
      context: ..
      dockerfile: docker/nginx/Dockerfile
    image: fidals/stb-nginx:prod
    container_name: stb-nginx
    restart: always
    depends_on:
      - stb-python
    volumes_from:
      - stb-source
    ports:
      - '$VIRTUAL_HOST_EXPOSE_PORT:80'
      - '$VIRTUAL_HOST_DOCS_EXPOSE_PORT:86'
    networks:
      - stb-frontend
    command: nginx -g 'daemon off;'

  stb-postgres:
    image: postgres:9.5
    restart: always
    container_name: stb-postgres
    environment:
      POSTGRES_DB: $DB_NAME
      POSTGRES_PASSWORD: $DB_PASS
    networks:
      - stb-backend
    volumes:
      - /opt/database/stroyprombeton:/var/lib/postgresql/data

  stb-rabbitmq:
    image: rabbitmq:management-alpine
    container_name: stb-rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: $RABBITMQ_DEFAULT_USER
      RABBITMQ_DEFAULT_PASS: $RABBITMQ_DEFAULT_PASS
    networks:
      - stb-backend
    ports:
      - '5674:5672'
      - '15674:15672'

  # Контейнер при запуске создаёт бэкап.
  # Бэкап - это несколько архивов: database.tar.gz, media.tar.gz, static.tar.gz
  # в директории /opt/backup/stroyprombeton
  stb-backup-data:
    image: alpine:latest
    container_name: stb-backup-data
    volumes_from:
      - stb-source
    volumes:
      - ../etc/stb-backup-entrypoint.sh:/usr/bin/entrypoint.sh
      - /opt/backup/stroyprombeton:/opt/backup
      - /opt/database/stroyprombeton:/usr/app/src/database
    entrypoint:
      - sh
      - /usr/bin/entrypoint.sh

networks:
  stb-backend:
  stb-frontend:
