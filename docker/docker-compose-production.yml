version: '2'

# Anchors
# x-, Docker will treat as an extension and ignore
x-python-app: &python-app
  restart: always
  env_file:
    - env_files/app
    - env_files/credentials
    - env_files/paths
    - env_files/ports
  networks:
    - stb-backend
    - stb-frontend
  command: gunicorn stroyprombeton.wsgi:application -c /etc/gunicorn.py -b 0.0.0.0:8000

x-celery-worker: &celery-worker
  image: fidals/stb:prod
  restart: always
  env_file:
    - env_files/app
    - env_files/credentials
    - env_files/paths
  depends_on:
    - rabbitmq
  volumes:
    - ../stroyprombeton/settings/local.py:$SRC_DIR/stroyprombeton/settings/local.py
  networks:
    - stb-backend

services:
  app:
    <<: *python-app
    image: fidals/stb:prod
    container_name: stb-python
    environment:
      - PYTHONUNBUFFERED=0
    ports:
      - 8000
    depends_on:
      - postgres
      - rabbitmq
      - redis
      - celery-mail
      - celery-default
      - celery-command
    volumes:
      - ../stroyprombeton/settings/local.py:$SRC_DIR/stroyprombeton/settings/local.py
      # contains refarm-site modules
      - $DEPS_DIR
      # source code volume
      - $SRC_DIR
      # contains media files
      - /opt/media/stroyprombeton/:$SRC_DIR/media/

  app-stage:
    <<: *python-app
    image: fidals/stb:stage
    container_name: stb-python-stage
    environment:
      - POSTGRES_DB=stb_stage
      - DJANGO_SETTINGS_MODULE=stroyprombeton.settings.stage
    depends_on:
      - postgres
      - rabbitmq
    ports:
      - $VIRTUAL_HOST_STAGE_PORT:8000
    volumes:
      - ../stroyprombeton/settings/stage.py:$SRC_DIR/stroyprombeton/settings/stage.py
      # contains refarm-site modules
      - $DEPS_DIR
      - /opt/media/stb_stage/:$SRC_DIR/media/

  celery-beat:
    <<: *celery-worker
    container_name: stb-celery-beat
    command: celery -A stroyprombeton beat -l info

  celery-command:
    <<: *celery-worker
    container_name: stb-celery-command-worker
    depends_on:
      - celery-beat
      - rabbitmq
    command: celery -A stroyprombeton worker -E -n worker.command@%%h -l info -Q command

  celery-default:
    <<: *celery-worker
    container_name: stb-celery-default-worker
    command: celery -A stroyprombeton worker -E -n worker.default@%%h -l info -Q default

  celery-mail:
    <<: *celery-worker
    container_name: stb-celery-mail-worker
    command: celery -A stroyprombeton worker -E -n worker.mail@%%h -l info -Q mail

  nginx:
    image: fidals/stb-nginx:prod
    container_name: stb-nginx
    restart: always
    env_file:
      - env_files/ports
    volumes_from:
      - app
    ports:
      - $VIRTUAL_HOST_PORT:80
    networks:
      - stb-frontend
    command: nginx -g 'daemon off;'

  postgres:
    image: postgres:9.5
    restart: always
    container_name: stb-postgres
    env_file:
      - env_files/credentials
      - env_files/app
    networks:
      - stb-backend
    volumes:
      - /opt/database/stroyprombeton:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: stb-rabbitmq
    restart: always
    env_file:
      - env_files/app
      - env_files/credentials
    networks:
      - stb-backend
    ports:
      - 5672
      - 15672

  redis:
    image: redis:alpine
    container_name: stb-redis
    restart: always
    env_file:
      - env_files/credentials
    command: redis-server /data/redis.conf --requirepass $REDIS_PASSWORD
    volumes:
      - ../etc/redis/redis.conf:/data/redis.conf
    networks:
      - stb-backend
    ports:
      - 6379

  # Incremental backups over cron.
  # Backup host server keeps backups.
  backup:
    build:
      context: ..
      dockerfile: docker/images/cron/Dockerfile
    env_file:
      - env_files/credentials
    container_name: stb-backup-data
    volumes_from:
      - app
    volumes:
      - ../etc/backup/backup-entrypoint.sh:/usr/bin/entrypoint.sh
      - ../etc/backup/crontab:/etc/cron.d/crontab
      - /opt/media/stroyprombeton/:/opt/media/
      # @todo #205:60m Process private key for backups
      #  Create a script for backups to ask private key and host if they are missed.
      - /etc/backup/private.key:/home/docker/.ssh/id_rsa
      # Will be fixed at backup db subtask
      # - /opt/database/stroyprombeton:/usr/app/src/database

networks:
  stb-backend:
  stb-frontend:
