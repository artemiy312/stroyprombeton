version: '2'

services:

  source:
    image: busybox
    container_name: stb_source
    volumes:
      - ./../:/usr/app/src/ # code volume
      # - ./../static/:/usr/app/src/static/ # shared static folder
      # - ./../media/:/usr/app/src/media/ # shared media folder
    command: sh -c "top > /dev/null"

  python:
    build:
      context: ..
      dockerfile: docker/python/dev/Dockerfile
    image: fidals/stb:dev
    container_name: stb_python
    environment:
      - ALLOWED_HOSTS=$VIRTUAL_HOST_NAME
      - DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE
      - DATABASE_URL=postgres://$DB_USER:$DB_PASS@postgres/$DB_NAME
      - BROCKER_URL=amqp://$RABBITMQ_DEFAULT_USER:$RABBITMQ_DEFAULT_PASS@rabbitmq:5672/
    ports:
      - '$VIRTUAL_HOST_EXPOSE_PORT:$VIRTUAL_HOST_PORT'
      - $VIRTUAL_HOST_LIVESERVER_PORT
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - stb_backend
      - stb_frontend
    volumes:
      - /src/ # contains refarm-site modules
    volumes_from:
      - source
    command: python manage.py runserver 0.0.0.0:$VIRTUAL_HOST_PORT

  nodejs:
    build:
      context: ..
      dockerfile: docker/node/Dockerfile
    container_name: stb_nodejs
    command: bash -c 'npm install && npm install -g gulp-cli && gulp build'
    volumes_from:
      - source
      - python

  postgres:
    image: postgres:9.5
    restart: always
    container_name: stb_postgres
    environment:
      POSTGRES_DB: $DB_NAME
      POSTGRES_PASSWORD: $DB_PASS
    networks:
      - stb_backend
    volumes:
      - /var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:management-alpine
    restart: always
    container_name: stb_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: $RABBITMQ_DEFAULT_USER
      RABBITMQ_DEFAULT_PASS: $RABBITMQ_DEFAULT_PASS
    networks:
      - stb_backend
    ports:
      - '5674:5672'
      - '15674:15672'

  # TODO:
  # Selenium Grid stuff (can't get it to work)

  # selenium-hub:
  #   image: selenium/hub:3.2.0
  #   restart: always
  #   networks:
  #     - stb_backend
  #   ports:
  #     - '4444:4444'

  # selenium-chrome:
  #   image: selenium/node-chrome:3.2.0
  #   restart: always
  #   depends_on:
  #     - selenium-hub
  #   environment:
  #     - HUB_PORT_4444_TCP_ADDR=selenium-hub
  #     - HUB_PORT_4444_TCP_PORT=4444
  #   networks:
  #     - stb_backend
  #   ports:
  #     - 5555
  #     - 5900

  selenium-hub:
    image: selenium/standalone-chrome-debug:3.3.0
    restart: always
    ports:
      - '4444:4444'
      - '5900'
    networks:
      - stb_backend
    volumes: # https://github.com/SeleniumHQ/docker-selenium#running-the-images
      - /dev/shm:/dev/shm

networks:
  stb_backend:
  stb_frontend:
