@import "./variables";

@mixin font-smoothing($value: antialiased) {
  @if $value == antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  } @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}

// Mediaqueries:
@mixin device($device) {
  @if $device == mob {
    @media (max-width: 800px) {
      @content;
    }
  } @else if $device == tab {
    @media (min-width: 801px) and (max-width: 1023px) {
      @content;
    }
  } @else if $device == pc {
    @media (min-width: 1024px) {
      @content;
    }
  }
}

// Breakpoints:
@mixin bp($key1, $breakpoint, $key2: null, $resolution2: null) {
  @if nth($key1 $breakpoint $key2 $resolution2, 3) == null {
    @media only screen and ($key1: $breakpoint) {
      @content;
    }
  } @else {
    @media only screen and ($key1: $breakpoint) and ($key2: $resolution2) {
      @content;
    }
  }
}

// Justify children:
@mixin justify {
  position: relative;
  text-align: justify;

  &::after {
    content: "";
    display: inline-block;
    width: 100%;
  }
}

// Links
@mixin grey-link {
  color: $c-link-grey;
  transition: color 0.3s ease;

  &:hover {
    color: $c-link-grey-hovered;
  }
}

// Boxes
@mixin teaser-box {
  background-color: $c-teaser-bg;
  position: relative;
  transition: all 0.3s ease;

  &:hover {
    background-color: $c-teaser-bg-hover;
    box-shadow: $sh-teaser;
  }
}

// Transition
@mixin transition(
  $property: all,
  $time: 0.3s,
  $easing: ease
) {
  transition: $property $time $easing;
}
