pipeline:
  pip-install:
    image: python
    commands:
      - pip install -r requirements.txt
      - rm -rf /usr/app/deps/site-packages
      - mv /usr/local/lib/python3.6/site-packages /usr/app/deps
    volumes:
      - /tmp/cache/drone/stroyprombeton/site-packages/${DRONE_COMMIT_SHA}:/usr/app/deps
    when:
      event: [push, pull_request]
      branch: master

  npm:
    image: node:slim
    environment:
      - DEPS_DIR=/usr/app/deps
    commands:
      - npm install
      - npm install -g gulp-cli
      - gulp build
    volumes:
      - /tmp/cache/drone/stroyprombeton/node_modules:/drone/src/github.com/fidals/stroyprombeton/commit/${DRONE_COMMIT_SHA}/node_modules
      - /tmp/cache/drone/stroyprombeton/site-packages/${DRONE_COMMIT_SHA}/site-packages:/usr/app/deps
    when:
      event: [push, pull_request]
      branch: master

  test:
    image: fidals/stb:dev
    environment:
      - TEST_ENV=true
      - DJANGO_SETTINGS_MODULE=stroyprombeton.settings.dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=test
      - POSTGRES_URL=postgres
      - POSTGRES_DB=test
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=test
      - RABBITMQ_URL=rabbitmq
      - RABBITMQ_PORT=5672
      - SELENIUM_URL=http://selenium:4444/wd/hub
    commands:
      - python manage.py migrate
      - python manage.py collectstatic --noinput
      - python manage.py test --liveserver=test:8021-8029 --parallel
    volumes:
      - /tmp/cache/drone/stroyprombeton/site-packages/${DRONE_COMMIT_SHA}/site-packages:/usr/local/lib/python3.6/site-packages
    when:
      event: [push, pull_request]
      branch: master

  lint:
    image: docker/compose:1.17.1
    commands:
      - cd docker
      - docker-compose run --rm lint
      - docker-compose run --rm pdd
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # @todo #142:60m Explore why drone `lint` and `docker-build` use .env
      #  Both of them should not as it seems. Write doc why or rm them.
      #  in case if "Push Hooks" is enabled in Drone settings GUI
      - /root/prog/stroyprombeton/docker/.env:/drone/src/github.com/fidals/stroyprombeton/commit/${DRONE_COMMIT_SHA}/docker/.env
    when:
      event: [push, pull_request]
      branch: master

  docker-build:
    image: docker/compose:1.17.1
    commands:
      - cd docker
      - docker-compose -f docker-compose-build.yml build --no-cache nodejs python-dev python-prod
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # in case if "Push Hooks" is enabled in Drone settings GUI
      - /root/prog/stroyprombeton/docker/.env:/drone/src/github.com/fidals/stroyprombeton/commit/${DRONE_COMMIT_SHA}/docker/.env
      # in case if "Pull Request Hooks" is enabled in Drone settings GUI
      - /root/prog/stroyprombeton/docker/.env:/drone/src/github.com/fidals/stroyprombeton/pull/${DRONE_PULL_REQUEST}/docker/.env
    when:
      event: push
      branch: master

  docker-push:
    image: docker:latest
    environment:
      - DOCKER_HUB_LOGIN=${DOCKER_HUB_LOGIN}
      - DOCKER_HUB_PASSWORD=${DOCKER_HUB_PASSWORD}
    commands:
      - docker login -u $DOCKER_HUB_LOGIN -p $DOCKER_HUB_PASSWORD
      - docker push fidals/stb-nodejs:prod
      - docker push fidals/stb:dev
      - docker push fidals/stb:prod
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      branch: master
    secrets: [ DOCKER_HUB_LOGIN, DOCKER_HUB_PASSWORD ]
    when:
      event: push
      branch: master

  pip-clean:
    image: busybox
    commands:
      - rm -rf /site-packages/${DRONE_COMMIT_SHA}
    volumes:
      - /tmp/cache/drone/stroyprombeton/site-packages/:/site-packages/
    when:
      status: [ success, failure ]

  npm-clean:
    image: busybox
    commands:
      - rm -rf /drone/src/github.com/fidals/stroyprombeton/pull/${DRONE_PULL_REQUEST}/node_modules/*
    volumes:
      - /tmp/cache/drone/stroyprombeton/node_modules:/drone/src/github.com/fidals/stroyprombeton/pull/${DRONE_PULL_REQUEST}/node_modules
    when:
      status: [ success, failure ]

services:
  postgres:
    group: build
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=test

  rabbitmq:
    group: build
    image: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=test

  selenium:
    group: build
    image: selenium/standalone-chrome-debug:3.10.0
    environment: # https://github.com/SeleniumHQ/docker-selenium/issues/392
      - DBUS_SESSION_BUS_ADDRESS=/dev/null
      - SCREEN_WIDTH=1920
      - SCREEN_HEIGHT=1080
    shm_size: 4G
    volumes: # https://github.com/SeleniumHQ/docker-selenium#running-the-images
      - /dev/shm:/dev/shm
