branches: master

pipeline:
  pip-install:
    image: python
    commands:
      - pip install -r requirements.txt
      - rm -rf /usr/app/deps/site-packages
      - mv /usr/local/lib/python3.6/site-packages /usr/app/deps
    volumes:
      - /tmp/cache/drone/stroyprombeton/site-packages/${DRONE_COMMIT_SHA}:/usr/app/deps
    when:
      event: [push, pull_request]

  npm:
    image: node:slim
    environment:
      - DEPS_DIR=/usr/app/deps
    commands:
      - npm install
      - npm install -g gulp-cli
      - gulp build
    volumes:
      - /tmp/cache/drone/stroyprombeton/site-packages/${DRONE_COMMIT_SHA}/site-packages:/usr/app/deps
      - /tmp/cache/drone/stroyprombeton/front_build/${DRONE_COMMIT_SHA}:/drone/src/github.com/fidals/stroyprombeton/build
    when:
      event: [push, pull_request]

  test:
    image: fidals/stb:dev
    environment:
      - TEST_ENV=true
      - DEPS_DIR=/usr/app/deps
      - DJANGO_SETTINGS_MODULE=stroyprombeton.settings.dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=test
      - POSTGRES_URL=postgres
      - POSTGRES_DB=test
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=test
      - RABBITMQ_URL=rabbitmq
      - RABBITMQ_PORT=5672
      - SELENIUM_URL=http://selenium:4444/wd/hub
      # Hardcoded env values because of drone secret's bug. See stb#263
      - SELENIUM_TIMEOUT_SECONDS=120
      - SELENIUM_WAIT_SECONDS=120
    commands:
      - echo $SELENIUM_TIMEOUT_SECONDS $SELENIUM_WAIT_SECONDS
      - python manage.py migrate
      - python manage.py collectstatic --noinput
      - python manage.py test --liveserver=test:8021-8029 --parallel
    volumes:
      - /tmp/cache/drone/stroyprombeton/site-packages/${DRONE_COMMIT_SHA}/site-packages:/usr/local/lib/python3.6/site-packages
      - /tmp/cache/drone/stroyprombeton/front_build/${DRONE_COMMIT_SHA}:/drone/src/github.com/fidals/stroyprombeton/front/build
    when:
      event: [push, pull_request]

  lint-coala:
    image: fidals/coala-ci
    group: lint
    commands:
      - coala --ci -j 2
    when:
      event: [push, pull_request]

  lint-pdd:
    image: fidals/pdd-ci
    group: lint
    commands:
      - pdd --verbose
        --exclude=node_modules/**/* --exclude=static/**/*
        --exclude=media/**/* --exclude=doc/build/**/*
        --exclude=.idea/**/*
        --exclude=front/build
        --exclude=front/images
        --exclude=**/*.pyc
        --exclude=**/*.jpg
        -f report.xml
    when:
      event: [push, pull_request]

  docker-build:
    image: docker/compose:1.17.1
    environment:
      - DEPS_DIR=/usr/app/deps
    commands:
      - cd docker
      - docker-compose -f docker-compose-build.yml build --no-cache nodejs python-dev python-prod
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/cache/drone/stroyprombeton/front_build/${DRONE_COMMIT_SHA}:/drone/src/github.com/fidals/stroyprombeton/front/build
    when:
      event: push

  docker-push:
    image: docker:latest
    environment:
      - DOCKER_HUB_LOGIN=${DOCKER_HUB_LOGIN}
      - DOCKER_HUB_PASSWORD=${DOCKER_HUB_PASSWORD}
    commands:
      - docker login -u $DOCKER_HUB_LOGIN -p $DOCKER_HUB_PASSWORD
      - docker push fidals/stb-nodejs:dev
      - docker push fidals/stb:dev
      - docker push fidals/stb:prod
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    secrets: [ DOCKER_HUB_LOGIN, DOCKER_HUB_PASSWORD ]
    when:
      event: push

  pip-clean:
    image: busybox
    commands:
      - rm -rf /site-packages/${DRONE_COMMIT_SHA}
    volumes:
      - /tmp/cache/drone/stroyprombeton/site-packages/:/site-packages/
    when:
      event: [ push, pull_request ]
      status: [ success, failure ]

  npm-clean:
    image: busybox
    commands:
      - rm -rf /drone/src/github.com/fidals/stroyprombeton/pull/${DRONE_PULL_REQUEST}/node_modules/*
    volumes:
      - /tmp/cache/drone/stroyprombeton/node_modules:/drone/src/github.com/fidals/stroyprombeton/pull/${DRONE_PULL_REQUEST}/node_modules
    when:
      event: [ push, pull_request ]
      status: [ success, failure ]

services:
  postgres:
    group: build
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=test
    when:
      event: [push, pull_request]

  rabbitmq:
    group: build
    image: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=test
    when:
      event: [push, pull_request]

  selenium:
    group: build
    image: selenium/standalone-chrome-debug:3.10.0
    environment: # https://github.com/SeleniumHQ/docker-selenium/issues/392
      - DBUS_SESSION_BUS_ADDRESS=/dev/null
      - SCREEN_WIDTH=1920
      - SCREEN_HEIGHT=1080
    shm_size: 4G
    volumes: # https://github.com/SeleniumHQ/docker-selenium#running-the-images
      - /dev/shm:/dev/shm
    when:
      event: [push, pull_request]
